# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
# Optimizations based on: http://engineering.later.com/2018/08/22/faster-circle-ci-jobs.html
#
version: 2

workflows:
  version: 2
  test-deploy:
    jobs:
      - build
      - deploy:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.5

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-gem-{{ checksum "rspec-translation.gemspec" }}
            - v1-dependencies-gem-

      - run:
          name: Install Bundler
          command: |
            export BUNDLER_VERSION=2.0.2 >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install dependencies
          command: |
            bundle check --path vendor/bundle || bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: Dependencies security audit
          command: |
            bundle exec bundle-audit check --update

      - save_cache:
          key: v1-dependencies-gem-{{ checksum "rspec-translation.gemspec" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - v1-rubocop-cache-{{ checksum ".rubocop.yml" }}-{{ .Branch }}
            - v1-rubocop-cache-{{ checksum ".rubocop.yml" }}-master
            - v1-rubocop-cache-{{ checksum ".rubocop.yml" }}

      - run:
          name: Rubocop
          command: bundle exec rubocop --parallel

      - save_cache:
          key: v1-rubocop-cache-{{ checksum ".rubocop.yml" }}-{{ .Branch }}-{{ epoch }}
          paths:
            - ../.cache/rubocop_cache

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            bundle exec rspec
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
  deploy:
      docker:
        - image: circleci/ruby:2.5.5

      working_directory: ~/repo

      steps:
        - checkout
        - run:
            name: Setup Rubygem Credentials
            command: bash .circleci/setup-rubygems.sh

        - run:
            name: Publish to Rubygems
            command: |
              gem build rspec-translation.gemspec
              gem push "rspec-translation-$(git describe --tags).gem"
